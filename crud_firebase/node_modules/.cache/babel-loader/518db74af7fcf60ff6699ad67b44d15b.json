{"ast":null,"code":"var _jsxFileName = \"/home/saulo/Documents/atividade7/crud_firebase/src/components/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import { Toast, ToastContainer } from \"react-bootstrap\";\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport FirebaseUserService from \"../services/FirebaseUserService\";\nimport FirebaseContext from \"../utils/FirebaseContext\"; //import MyToast from \"../utils/MyToast\"; //TOAST\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = _ref => {\n  let {\n    setLogged,\n    setShowToast,\n    setToast\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => /*#__PURE__*/_jsxDEV(SignUp, {\n      firebase: firebase,\n      setLogged: setLogged,\n      setShowToast: setShowToast,\n      setToast: setToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SignUpPage;\n\nfunction SignUp(props) {\n  _s();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [repassword, setRepassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [validate, setValidate] = useState({\n    login: '',\n    password: '',\n    repassword: ''\n  });\n  const navigate = useNavigate();\n\n  const validateFields = () => {\n    let res = true;\n    setValidate({\n      login: '',\n      password: '',\n      repassword: ''\n    });\n\n    if (password !== repassword) {\n      props.setToast({\n        header: 'Erro!',\n        body: 'Repita a mesmo senha!',\n        bg: 'warning'\n      });\n      props.setShowToast(true);\n      setLoading(false);\n      setValidate({\n        login: '',\n        password: 'is-invalid',\n        repassword: 'is-invalid'\n      });\n      res = false;\n    }\n\n    if (login === '' || password === '' || repassword === '') {\n      props.setToast({\n        header: 'Atenção!',\n        body: 'Preencha todos os campos.',\n        bg: 'danger'\n      });\n      props.setShowToast(true);\n      setLoading(false);\n      res = false;\n      let validateObj = {\n        login: '',\n        password: '',\n        repassword: ''\n      };\n      if (login === '') validateObj.login = 'is-invalid';\n      if (password === '') validateObj.password = 'is-invalid';\n      if (repassword === '') validateObj.repassword = 'is-invalid';\n      setValidate(validateObj);\n    }\n\n    return res;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!validateFields()) return;\n    FirebaseUserService.signup(props.firebase.getAuthentication(), login, password, (res, content) => {\n      if (res) {\n        //console.log(user.email)\n        setLoading(false);\n        props.firebase.setUser(content);\n        props.setToast({\n          header: 'Sucesso!',\n          body: `Usuário ${content.email} cadastrado com sucesso!`,\n          bg: 'success'\n        });\n        props.setShowToast(true);\n        props.setLogged(true);\n        navigate('/listStudent');\n      } else {\n        //alert('Usuário e/ou senha incorretos!')\n        props.setToast({\n          header: 'Erro!',\n          body: content,\n          bg: 'danger'\n        });\n        props.setShowToast(true);\n        setLoading(false);\n      }\n    });\n    /*FirebaseUserService.login(\n        props.firebase.getAuthentication(),\n        login,\n        password,\n        (user) => {\n            if (user != null) {\n                //console.log(user.email)\n                setLoading(false)\n                props.firebase.setUser(user)\n                props.setLogged(true)\n                navigate('/listStudent')\n            } else {\n                //alert('Usuário e/ou senha incorretos!')\n                setLoading(false)\n                setShowToast(true)\n            }\n        }\n    )*/\n  };\n\n  const renderSubmitButton = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 10\n            },\n            children: \"Carregando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Efetuar Cadastro\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }; //TOAST\n\n  /*const renderToast = () => {\n      return <MyToast\n          show={showToast}\n          header={toast.header}\n          body={toast.body}\n          setShowToast={setShowToast}\n          bg='secondary'\n      />\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-login\",\n    style: {\n      marginTop: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        width: '40%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Login*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${validate.login}`,\n            value: login == null || login === undefined ? \"\" : login,\n            name: \"login\",\n            onChange: event => {\n              setLogin(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `form-control ${validate.password}`,\n            value: password !== null && password !== void 0 ? password : \"\",\n            name: \"password\",\n            onChange: event => {\n              setPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Repita a Senha* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `form-control ${validate.repassword}`,\n            value: repassword !== null && repassword !== void 0 ? repassword : \"\",\n            name: \"repassword\",\n            onChange: event => {\n              setRepassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), renderSubmitButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"TAevwRBv0oM0z/v2omioOOgP6kc=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = SignUp;\nexport default SignUpPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpPage\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/home/saulo/Documents/atividade7/crud_firebase/src/components/SignUp.jsx"],"names":["React","useState","Link","useNavigate","FirebaseUserService","FirebaseContext","SignUpPage","setLogged","setShowToast","setToast","firebase","SignUp","props","login","setLogin","password","setPassword","repassword","setRepassword","loading","setLoading","validate","setValidate","navigate","validateFields","res","header","body","bg","validateObj","handleSubmit","event","preventDefault","signup","getAuthentication","content","setUser","email","renderSubmitButton","paddingTop","marginLeft","marginTop","width","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//import { Toast, ToastContainer } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport FirebaseUserService from \"../services/FirebaseUserService\";\nimport FirebaseContext from \"../utils/FirebaseContext\";\n//import MyToast from \"../utils/MyToast\"; //TOAST\n\nconst SignUpPage = ({setLogged,setShowToast,setToast}) =>\n    <FirebaseContext.Consumer>\n        {(firebase) => <SignUp \n                            firebase={firebase} \n                            setLogged={setLogged} \n                            setShowToast={setShowToast} \n                            setToast={setToast}/>}\n    </FirebaseContext.Consumer>\n\nfunction SignUp(props) {\n\n    const [login, setLogin] = useState('')\n    const [password, setPassword] = useState('')\n    const [repassword, setRepassword] = useState('')\n\n    const [loading, setLoading] = useState(false)\n    \n    const [validate,setValidate] = useState({login:'',password:'',repassword:''})\n    const navigate = useNavigate()\n\n    const validateFields = () => {\n        let res = true\n        setValidate({login:'',password:'',repassword:''})\n        \n        if(password!==repassword){\n            props.setToast({header:'Erro!',body:'Repita a mesmo senha!', bg:'warning'})\n            props.setShowToast(true)\n            setLoading(false)\n            setValidate({login:'',password:'is-invalid',repassword:'is-invalid'})\n            res = false           \n        }\n\n        if(login === '' || password === '' || repassword === ''){\n            props.setToast({header:'Atenção!',body:'Preencha todos os campos.', bg:'danger'})\n            props.setShowToast(true)\n            setLoading(false)\n            res = false\n            let validateObj = {login:'',password:'',repassword:''}\n            if(login === '') validateObj.login = 'is-invalid'\n            if(password === '') validateObj.password = 'is-invalid'\n            if(repassword === '') validateObj.repassword = 'is-invalid'\n            setValidate(validateObj)\n        }\n\n        return res\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setLoading(true)\n        if(!validateFields()) return\n        FirebaseUserService.signup(\n            props.firebase.getAuthentication(),\n            login,\n            password,\n            (res,content) => {\n                if (res) {\n                    //console.log(user.email)\n                    setLoading(false)\n                    props.firebase.setUser(content)\n                    props.setToast({header:'Sucesso!',body:`Usuário ${content.email} cadastrado com sucesso!`,bg:'success'})\n                    props.setShowToast(true)\n                    props.setLogged(true)\n                    navigate('/listStudent')\n\n                } else {\n                    //alert('Usuário e/ou senha incorretos!')\n                    props.setToast({header:'Erro!',body:content, bg:'danger'})\n                    props.setShowToast(true)\n                    setLoading(false)\n                }\n            }\n        )\n        /*FirebaseUserService.login(\n            props.firebase.getAuthentication(),\n            login,\n            password,\n            (user) => {\n                if (user != null) {\n                    //console.log(user.email)\n                    setLoading(false)\n                    props.firebase.setUser(user)\n                    props.setLogged(true)\n                    navigate('/listStudent')\n                } else {\n                    //alert('Usuário e/ou senha incorretos!')\n                    setLoading(false)\n                    setShowToast(true)\n                }\n            }\n        )*/\n    }\n\n    const renderSubmitButton = () => {\n        if (loading) {\n            return (\n                <div style={{ paddingTop: 20 }}>\n                    <button className=\"btn btn-primary\" type=\"button\" disabled>\n                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        <span style={{ marginLeft: 10 }}>Carregando...</span>\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <>\n                <div className=\"form-group\" style={{ paddingTop: 20 }}>\n                    <input type=\"submit\" value=\"Efetuar Cadastro\" className=\"btn btn-primary\" />\n                </div>\n            </>\n        )\n    }\n\n    //TOAST\n    /*const renderToast = () => {\n        return <MyToast\n            show={showToast}\n            header={toast.header}\n            body={toast.body}\n            setShowToast={setShowToast}\n            bg='secondary'\n        />\n    }*/\n\n    return (\n        <div className=\"content-login\" style={{ marginTop: 50 }}>\n            {/*Toast*/}\n            <main style={{ width: '40%' }}>\n                <h2>Cadastre-se</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Login*</label>\n                        <input type=\"text\"\n                            className={`form-control ${validate.login}`}\n                            value={(login == null || login === undefined) ? \"\" : login}\n                            name=\"login\"\n                            onChange={(event) => { setLogin(event.target.value) }} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Senha* </label>\n                        <input type=\"password\"\n                            className={`form-control ${validate.password}`}\n                            value={password ?? \"\"}\n                            name=\"password\"\n                            onChange={(event) => { setPassword(event.target.value) }} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Repita a Senha* </label>\n                        <input type=\"password\"\n                            className={`form-control ${validate.repassword}`}\n                            value={repassword ?? \"\"}\n                            name=\"repassword\"\n                            onChange={(event) => { setRepassword(event.target.value) }} />\n                    </div>\n                    {renderSubmitButton()}\n                </form>\n            </main>\n            <nav>\n                <Link to=\"/about\">About</Link>\n            </nav>\n        </div>\n    );\n}\n\nexport default SignUpPage\n"]},"metadata":{},"sourceType":"module"}