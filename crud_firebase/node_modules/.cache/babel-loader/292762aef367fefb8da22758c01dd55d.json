{"ast":null,"code":"var _jsxFileName = \"/home/saulo/Documents/atividade6/crud/src/components/crud/student/ListStudent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; //import axios from \"axios\";\n\nimport StudentTableRow from \"./StudentTableRow\"; //import { students } from './data.js'\n\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\nimport FirebaseService from \"../../../services/FirebaseService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListStudentPage = () => /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n  children: firebase => /*#__PURE__*/_jsxDEV(ListStudent, {\n    firebase: firebase\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = ListStudentPage;\n\nfunction ListStudent(props) {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    //axios.get(\"http://localhost:3001/students\")\n\n    /*axios.get(\"http://localhost:3002/crud/students/list\")\n        .then(\n            (res) => {\n                setStudents(res.data)\n            }\n        )\n        .catch(\n            (error) => {\n                console.log(error)\n            }\n        )*/\n    //console.log(props.firebase.getFirestoreDb())\n    FirebaseService.list_onSnapshot(props.firebase.getFirestoreDb(), students => {\n      setStudents(students);\n    });\n  }, [props]);\n\n  function deleteStudentById(_id) {\n    let studentsTemp = students;\n\n    for (let i = 0; i < studentsTemp.length; i++) {\n      if (studentsTemp[i]._id === _id) {\n        //console.log(\"1\")\n        studentsTemp.splice(i, 1);\n      }\n    }\n\n    setStudents([...studentsTemp]); //deve-se criar um outro array para disparar o re-render\n    //setStudents(studentsTemp)\n    //setFlag(!flag)\n  }\n\n  function generateTable() {\n    if (!students) return;\n    return students.map((student, i) => {\n      return /*#__PURE__*/_jsxDEV(StudentTableRow, {\n        student: student,\n        deleteStudentById: deleteStudentById,\n        firestoreDb: props.firebase.getFirestoreDb()\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Listar Estudantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Curso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"IRA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              style: {\n                textAlign: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: generateTable()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListStudent, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n\n_c2 = ListStudent;\nexport default ListStudentPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListStudentPage\");\n$RefreshReg$(_c2, \"ListStudent\");","map":{"version":3,"sources":["/home/saulo/Documents/atividade6/crud/src/components/crud/student/ListStudent.jsx"],"names":["React","useState","useEffect","Link","StudentTableRow","FirebaseContext","FirebaseService","ListStudentPage","firebase","ListStudent","props","students","setStudents","list_onSnapshot","getFirestoreDb","deleteStudentById","_id","studentsTemp","i","length","splice","generateTable","map","student","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import axios from \"axios\";\n\nimport StudentTableRow from \"./StudentTableRow\";\n//import { students } from './data.js'\n\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\nimport FirebaseService from \"../../../services/FirebaseService\";\n\nconst ListStudentPage = () => \n    <FirebaseContext.Consumer>\n        {(firebase) => <ListStudent firebase={firebase} />}\n    </FirebaseContext.Consumer>\n\n\nfunction ListStudent(props) {\n\n    const [students, setStudents] = useState([])\n\n    useEffect(\n        () => {\n            //axios.get(\"http://localhost:3001/students\")\n            /*axios.get(\"http://localhost:3002/crud/students/list\")\n                .then(\n                    (res) => {\n                        setStudents(res.data)\n                    }\n                )\n                .catch(\n                    (error) => {\n                        console.log(error)\n                    }\n                )*/\n            //console.log(props.firebase.getFirestoreDb())\n            FirebaseService.list_onSnapshot(\n                props.firebase.getFirestoreDb(), \n                (students)=>{\n                    setStudents(students)\n                }\n            )\n        }\n        ,\n        [props] \n    )\n\n    function deleteStudentById(_id){\n        let studentsTemp = students\n        for(let i=0;i<studentsTemp.length;i++){\n            if(studentsTemp[i]._id === _id){\n                //console.log(\"1\")\n                studentsTemp.splice(i,1)\n            }\n        }\n        setStudents([...studentsTemp]) //deve-se criar um outro array para disparar o re-render\n        //setStudents(studentsTemp)\n        //setFlag(!flag)\n    }\n\n    function generateTable() {\n\n        if (!students) return\n        return students.map(\n            (student, i) => {\n                return <StudentTableRow \n                            student={student} \n                            key={i} \n                            deleteStudentById={deleteStudentById}\n                            firestoreDb = {props.firebase.getFirestoreDb()}\n                            />\n            }\n        )\n    }\n\n    return (\n        <>\n            <main>\n                <h2>\n                    Listar Estudantes\n                </h2>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Nome</th>\n                            <th>Curso</th>\n                            <th>IRA</th>\n                            <th colSpan={2} style={{ textAlign: \"center\" }}></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {generateTable()}\n                    </tbody>\n                </table>\n            </main>\n            <nav>\n                <Link to=\"/\">Home</Link>\n            </nav>\n        </>\n    );\n}\n\nexport default ListStudentPage"]},"metadata":{},"sourceType":"module"}