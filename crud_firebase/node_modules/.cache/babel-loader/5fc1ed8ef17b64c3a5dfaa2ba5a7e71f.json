{"ast":null,"code":"var _jsxFileName = \"/home/saulo/Documents/atividade7/crud_firebase/src/components/crud/professor/EditProfessor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport FirebaseProfessorService from \"../../../services/FirebaseProfessorService\";\nimport FirebaseContext from \"../../../utils/FirebaseContext\"; //import axios from \"axios\";\n\nimport RestrictPage from \"../../../utils/RestrictPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProfessorPage = _ref => {\n  let {\n    setShowToast,\n    setToast\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => {\n      return /*#__PURE__*/_jsxDEV(RestrictPage, {\n        isLogged: firebase.getUser() != null,\n        isEmailVerified: firebase.getUser() != null ? firebase.getUser().emailVerified : false,\n        auth: firebase.getAuthentication(),\n        children: /*#__PURE__*/_jsxDEV(EditProfessor, {\n          firebase: firebase,\n          setShowToast: setShowToast,\n          setToast: setToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditProfessorPage;\n\nfunction EditProfessor(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [university, setUniversity] = useState(\"\");\n  const [degree, setDegree] = useState(\"Graduado\");\n  const [validate, setValidate] = useState({\n    name: '',\n    course: '',\n    ira: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    /*\n    axios.get(`http://localhost:3002/crud/professors/retrieve/` + params.id)\n    .then(\n        (response) => {\n        setName(response.data.name)\n        setUniversity(response.data.university)\n        setDegree(response.data.degree)\n        }\n    )\n    .catch((error) => console.log(error))\n    */\n    FirebaseProfessorService.retrieve_promise(props.firebase.getFirestoreDb(), professor => {\n      setName(professor.name);\n      setUniversity(professor.university);\n      setDegree(professor.degree);\n    }, params.id);\n  }, [params.id, props.firebase]);\n\n  const validateFields = () => {\n    let res = true;\n    setValidate({\n      name: '',\n      university: '',\n      degree: ''\n    });\n\n    if (name === '' || university === '' || degree === '') {\n      props.setToast({\n        header: 'Atenção!',\n        body: 'Preencha todos os campos.',\n        bg: 'warning'\n      });\n      props.setShowToast(true);\n      setLoading(false);\n      res = false;\n      let validateObj = {\n        name: '',\n        university: '',\n        degree: ''\n      };\n      if (name === '') validateObj.name = 'is-invalid';\n      if (university === '') validateObj.university = 'is-invalid';\n      if (degree === '') validateObj.degree = 'is-invalid';\n      setValidate(validateObj);\n    }\n\n    return res;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!validateFields()) return;\n    const updatedProfessor = {\n      name,\n      university,\n      degree\n    };\n    /*\n    axios.put(`http://localhost:3002/crud/professors/update/`+ params.id, updatedProfessor)\n    .then (\n       (response) => navigate(\"/listProfessor\")\n    )\n    .catch((error) => console.log(error))\n    */\n\n    FirebaseProfessorService.update(props.firebase.getFirestoreDb(), () => {\n      props.setToast({\n        header: 'Sucesso!',\n        body: `Professor ${name} editado com sucesso`,\n        bg: 'success'\n      });\n      props.setShowToast(true);\n      navigate(\"/listProfessor\");\n    }, params.id, updatedProfessor);\n  };\n\n  const renderSubmitButton = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 10\n            },\n            children: \"Carregando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Efetuar Edi\\xE7\\xE3o\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${validate.name}`,\n            value: name == null || name === undefined ? \"\" : name,\n            name: \"name\",\n            onChange: event => {\n              setName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Universidade: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${validate.university}`,\n            value: university !== null && university !== void 0 ? university : \"\",\n            name: \"university\",\n            onChange: event => {\n              setUniversity(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Titula\\xE7\\xE3o: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${validate.degree}`,\n            value: degree !== null && degree !== void 0 ? degree : 0,\n            name: \"degree\",\n            onChange: event => {\n              setDegree(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), renderSubmitButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditProfessor, \"JC/SbV3j9v9SQgqHXEHchuLl2MQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c2 = EditProfessor;\nexport default EditProfessorPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditProfessorPage\");\n$RefreshReg$(_c2, \"EditProfessor\");","map":{"version":3,"sources":["/home/saulo/Documents/atividade7/crud_firebase/src/components/crud/professor/EditProfessor.jsx"],"names":["React","useState","useEffect","Link","useParams","useNavigate","FirebaseProfessorService","FirebaseContext","RestrictPage","EditProfessorPage","setShowToast","setToast","firebase","getUser","emailVerified","getAuthentication","EditProfessor","props","name","setName","university","setUniversity","degree","setDegree","validate","setValidate","course","ira","loading","setLoading","params","navigate","retrieve_promise","getFirestoreDb","professor","id","validateFields","res","header","body","bg","validateObj","handleSubmit","event","preventDefault","updatedProfessor","update","renderSubmitButton","paddingTop","marginLeft","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport FirebaseProfessorService from \"../../../services/FirebaseProfessorService\";\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\n//import axios from \"axios\";\n\nimport RestrictPage from \"../../../utils/RestrictPage\";\n\n\nconst EditProfessorPage = ({ setShowToast, setToast }) =>\n    <FirebaseContext.Consumer>\n        {(firebase) => {\n            return (\n                <RestrictPage isLogged={firebase.getUser() != null}\n                    isEmailVerified={(firebase.getUser() != null) ? firebase.getUser().emailVerified : false}\n                    auth={firebase.getAuthentication()} >\n                    <EditProfessor\n                        firebase={firebase}\n                        setShowToast={setShowToast}\n                        setToast={setToast} />\n                </RestrictPage>\n            )\n        }}\n    </FirebaseContext.Consumer>\n\nfunction EditProfessor(props) {\n\n    const [name, setName] = useState(\"\")\n    const [university, setUniversity] = useState(\"\")\n    const [degree, setDegree] = useState(\"Graduado\")\n    const [validate, setValidate] = useState({ name: '', course: '', ira: '' })\n    const [loading, setLoading] = useState(false)\n    const params = useParams()\n    const navigate = useNavigate()\n\n    useEffect(\n        () => {\n            /*\n            axios.get(`http://localhost:3002/crud/professors/retrieve/` + params.id)\n            .then(\n                (response) => {\n                setName(response.data.name)\n                setUniversity(response.data.university)\n                setDegree(response.data.degree)\n                }\n            )\n            .catch((error) => console.log(error))\n            */\n            FirebaseProfessorService.retrieve_promise(\n                props.firebase.getFirestoreDb(),\n                (professor) => {\n                    setName(professor.name)\n                    setUniversity(professor.university)\n                    setDegree(professor.degree)\n                },\n                params.id\n            )\n        }, [params.id, props.firebase]\n    )\n\n    const validateFields = () => {\n        let res = true\n        setValidate({ name: '', university: '', degree: '' })\n\n        if (name === '' || university === '' || degree === '') {\n            props.setToast({ header: 'Atenção!', body: 'Preencha todos os campos.', bg:'warning'})\n            props.setShowToast(true)\n            setLoading(false)\n            res = false\n            let validateObj = { name: '', university: '', degree: '' }\n            if (name === '') validateObj.name = 'is-invalid'\n            if (university === '') validateObj.university = 'is-invalid'\n            if (degree === '') validateObj.degree = 'is-invalid'\n            setValidate(validateObj)\n        }\n        return res\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setLoading(true)\n        if (!validateFields()) return\n        const updatedProfessor = { name, university, degree }\n        /*\n        axios.put(`http://localhost:3002/crud/professors/update/`+ params.id, updatedProfessor)\n        .then (\n           (response) => navigate(\"/listProfessor\")\n        )\n        .catch((error) => console.log(error))\n        */\n        FirebaseProfessorService.update(\n            props.firebase.getFirestoreDb(),\n            () => {\n                props.setToast({ header: 'Sucesso!', body: `Professor ${name} editado com sucesso`, bg:'success'})\n                props.setShowToast(true)\n                navigate(\"/listProfessor\")\n            },\n            params.id,\n            updatedProfessor)\n    }\n\n    const renderSubmitButton = () => {\n        if (loading) {\n            return (\n                <div style={{ paddingTop: 20 }}>\n                    <button className=\"btn btn-primary\" type=\"button\" disabled>\n                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        <span style={{ marginLeft: 10 }}>Carregando...</span>\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <>\n                <div className=\"form-group\" style={{ paddingTop: 20 }}>\n                    <input type=\"submit\" value=\"Efetuar Edição\" className=\"btn btn-primary\" />\n                </div>\n            </>\n        )\n    }\n\n\n    return (\n        <>\n            <main>\n                <h2>\n                    Editar Professor\n                </h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Nome: </label>\n                        <input type=\"text\"\n                            className={`form-control ${validate.name}`}\n                            value={(name == null || name === undefined) ? \"\" : name}\n                            name=\"name\"\n                            onChange={(event) => { setName(event.target.value) }} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Universidade: </label>\n                        <input type=\"text\"\n                            className={`form-control ${validate.university}`}\n                            value={university ?? \"\"}\n                            name=\"university\"\n                            onChange={(event) => { setUniversity(event.target.value) }} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Titulação: </label>\n                        <input type=\"text\"\n                            className={`form-control ${validate.degree}`}\n                            value={degree ?? 0}\n                            name=\"degree\"\n                            onChange={(event) => { setDegree(event.target.value) }} />\n                    </div>\n                    {renderSubmitButton()}\n                </form>\n            </main>\n            <nav>\n                <Link to=\"/\">Home</Link>\n            </nav>\n        </>\n    );\n}\n\nexport default EditProfessorPage"]},"metadata":{},"sourceType":"module"}