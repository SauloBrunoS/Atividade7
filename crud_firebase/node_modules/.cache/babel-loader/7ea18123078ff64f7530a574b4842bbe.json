{"ast":null,"code":"var _jsxFileName = \"/home/saulo/Documents/atividade6/crud_firebase/src/components/crud/professor/ListProfessor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseProfessorService from \"../../../services/FirebaseProfessorService\";\nimport FirebaseContext from \"../../../utils/FirebaseContext\"; //import axios from \"axios\";\n\nimport ProfessorTableRow from \"./ProfessorTableRow\";\nimport RestrictPage from \"../../../utils/RestrictPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListProfessorPage = _ref => {\n  let {\n    setShowToast,\n    setToast\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => {\n      return /*#__PURE__*/_jsxDEV(RestrictPage, {\n        isLogged: firebase.getUser() != null,\n        isVerified: firebase.getUser() != null && firebase.getUser().emailVerified != false,\n        children: /*#__PURE__*/_jsxDEV(ListProfessor, {\n          firebase: firebase,\n          setShowToast: setShowToast,\n          setToast: setToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 1\n  }, this);\n};\n\n_c = ListProfessorPage;\n\nfunction ListProfessor(props) {\n  _s();\n\n  const [professors, setProfessors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    /*\n    axios.get(\"http://localhost:3002/crud/professors/list\")\n    .then(\n        (response) => {\n            setProfessors(response.data)\n        }\n    )\n    .catch (error => console.log(error))\n    */\n    setLoading(true);\n    FirebaseProfessorService.list_onSnapshot(props.firebase.getFirestoreDb(), professors => {\n      setLoading(false);\n      setProfessors(professors);\n    });\n  }, [props.firebase]);\n\n  function deleteProfessorById(_id) {\n    let professorsTemp = professors;\n\n    for (let i = 0; i < professorsTemp.length; i++) {\n      if (professorsTemp[i]._id === _id) {\n        professorsTemp.splice(i, 1);\n      }\n    }\n\n    setProfessors([...professorsTemp]);\n  }\n\n  function renderTable() {\n    if (loading) {\n      //mostrar um spinner!\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          style: {\n            width: '3rem',\n            height: '3rem'\n          },\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), \"Carregando...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Universidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tituala\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            style: {\n              textAlign: \"center\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderTableBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this);\n  }\n\n  function renderTableBody() {\n    if (!professors) return;\n    return students.map((student, i) => {\n      return /*#__PURE__*/_jsxDEV(StudentTableRow, {\n        student: student,\n        deleteStudentById: deleteStudentById,\n        firestore: props.firebase.getFirestoreDb(),\n        setShowToast: props.setShowToast,\n        setToast: props.setToast\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 28\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Listar Professores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Universidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Titula\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: 2,\n              style: {\n                textAlign: \"center\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: generateTable()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListProfessor, \"ED8MMesOdcJhq+QIYeCEUVgSN/M=\");\n\n_c2 = ListProfessor;\nexport default ListProfessorPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListProfessorPage\");\n$RefreshReg$(_c2, \"ListProfessor\");","map":{"version":3,"sources":["/home/saulo/Documents/atividade6/crud_firebase/src/components/crud/professor/ListProfessor.jsx"],"names":["React","useState","useEffect","Link","FirebaseProfessorService","FirebaseContext","ProfessorTableRow","RestrictPage","ListProfessorPage","setShowToast","setToast","firebase","getUser","emailVerified","ListProfessor","props","professors","setProfessors","loading","setLoading","list_onSnapshot","getFirestoreDb","deleteProfessorById","_id","professorsTemp","i","length","splice","renderTable","display","flexDirection","justifyContent","alignItems","padding","width","height","textAlign","renderTableBody","students","map","student","deleteStudentById","generateTable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseProfessorService from \"../../../services/FirebaseProfessorService\";\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\n//import axios from \"axios\";\n\nimport ProfessorTableRow from \"./ProfessorTableRow\";\nimport RestrictPage from \"../../../utils/RestrictPage\";\n\n\nconst ListProfessorPage = ({ setShowToast, setToast }) =>\n<FirebaseContext.Consumer>\n{\n    (firebase) => {\n        return (\n            <RestrictPage isLogged={firebase.getUser() != null} isVerified = {firebase.getUser() != null && firebase.getUser().emailVerified != false}>\n                <ListProfessor\n                    firebase={firebase}\n                    setShowToast={setShowToast}\n                    setToast={setToast} />\n            </RestrictPage>\n        )\n    }\n}\n</FirebaseContext.Consumer>\n\n\nfunction ListProfessor(props) {\n\n    const [professors, setProfessors] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect(\n        () => {\n            /*\n            axios.get(\"http://localhost:3002/crud/professors/list\")\n            .then(\n                (response) => {\n                    setProfessors(response.data)\n                }\n            )\n            .catch (error => console.log(error))\n            */\n           setLoading(true)\n            FirebaseProfessorService.list_onSnapshot(\n                props.firebase.getFirestoreDb(),\n                (professors) => {\n                    setLoading(false)\n                    setProfessors(professors)\n                }\n            )\n        }, [props.firebase]\n    )\n\n    function deleteProfessorById(_id) {\n        let professorsTemp = professors\n        for (let i = 0; i < professorsTemp.length; i++) {\n            if (professorsTemp[i]._id === _id) {\n                professorsTemp.splice(i, 1)\n            }\n        }\n        setProfessors([...professorsTemp])\n    }\n\n    function renderTable() {\n\n        if (loading) {\n            //mostrar um spinner!\n            return (\n                <div style={{\n                    display:'flex',\n                    flexDirection:'column',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    padding:100\n                }}>\n                    <div className=\"spinner-border\" \n                     style={{width: '3rem', height: '3rem'}} \n                     role=\"status\" />\n                     Carregando...\n                </div>\n            )\n        }   \n            return (\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Nome</th>\n                            <th>Universidade</th>\n                            <th>Titualação</th>\n                            <th colSpan={2} style={{ textAlign: \"center\" }}></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {renderTableBody()}\n                    </tbody>\n                </table>\n            )\n        }\n\n        function renderTableBody() {\n            if (!professors) return\n            return students.map(\n                (student, i) => {\n                    return <StudentTableRow\n                        student={student}\n                        key={i}\n                        deleteStudentById={deleteStudentById}\n                        firestore={props.firebase.getFirestoreDb()}\n                        setShowToast={props.setShowToast}\n                        setToast={props.setToast}\n                    />\n                }\n            )\n        }\n     \n\n\n    return (\n        <>\n            <main>\n                <h2>\n                    Listar Professores\n                </h2>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Nome</th>\n                            <th>Universidade</th>\n                            <th>Titulação</th>\n                            <th colSpan={2} style={{ textAlign: \"center\" }}></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {generateTable()}\n                    </tbody>\n                </table>\n            </main>\n            <nav>\n                <Link to=\"/\">Home</Link>\n            </nav>\n        </>\n    );\n}\n\nexport default ListProfessorPage"]},"metadata":{},"sourceType":"module"}