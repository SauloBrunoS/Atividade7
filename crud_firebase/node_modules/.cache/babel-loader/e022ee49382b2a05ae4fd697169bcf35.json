{"ast":null,"code":"var _jsxFileName = \"/home/saulo/Documents/atividade6/crud_firebase/src/components/crud/student/ListStudent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; //import axios from \"axios\";\n\nimport StudentTableRow from \"./StudentTableRow\"; //import { students } from './data.js'\n\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\nimport FirebaseService from \"../../../services/FirebaseStudentService\";\nimport RestrictPage from \"../../../utils/RestrictPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListStudentPage = _ref => {\n  let {\n    setShowToast,\n    setToast\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Consumer, {\n    children: firebase => {\n      return /*#__PURE__*/_jsxDEV(RestrictPage, {\n        isLogged: firebase.getUser() != null,\n        children: /*#__PURE__*/_jsxDEV(ListStudent, {\n          firebase: firebase,\n          setShowToast: setShowToast,\n          setToast: setToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListStudentPage;\n\nfunction ListStudent(props) {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    //axios.get(\"http://localhost:3001/students\")\n\n    /*axios.get(\"http://localhost:3002/crud/students/list\")\n        .then(\n            (res) => {\n                setStudents(res.data)\n            }\n        )\n        .catch(\n            (error) => {\n                console.log(error)\n            }\n        )*/\n    //console.log(props.firebase.getFirestoreDb())\n    setLoading(true);\n    FirebaseService.list_onSnapshot(props.firebase.getFirestoreDb(), students => {\n      setLoading(false);\n      setStudents(students);\n    });\n  }, [props.firebase]);\n\n  function deleteStudentById(_id) {\n    let studentsTemp = students;\n\n    for (let i = 0; i < studentsTemp.length; i++) {\n      if (studentsTemp[i]._id === _id) {\n        //console.log(\"1\")\n        studentsTemp.splice(i, 1);\n      }\n    }\n\n    setStudents([...studentsTemp]); //deve-se criar um outro array para disparar o re-render\n    //setStudents(studentsTemp)\n    //setFlag(!flag)\n  }\n\n  function renderTable() {\n    if (loading) {\n      //mostrar um spinner!\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          style: {\n            width: '3rem',\n            height: '3rem'\n          },\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), \"Carregando...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Curso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IRA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2,\n            style: {\n              textAlign: \"center\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderTableBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this);\n  }\n\n  function renderTableBody() {\n    if (!students) return;\n    return students.map((student, i) => {\n      return /*#__PURE__*/_jsxDEV(StudentTableRow, {\n        student: student,\n        deleteStudentById: deleteStudentById,\n        firestore: props.firebase.getFirestoreDb(),\n        setShowToast: props.setShowToast,\n        setToast: props.setToast\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 28\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Listar Estudantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), renderTable()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListStudent, \"6UPz+y8IPgCzn/fEJGbJrQCZU6M=\");\n\n_c2 = ListStudent;\nexport default ListStudentPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListStudentPage\");\n$RefreshReg$(_c2, \"ListStudent\");","map":{"version":3,"sources":["/home/saulo/Documents/atividade6/crud_firebase/src/components/crud/student/ListStudent.jsx"],"names":["React","useState","useEffect","Link","StudentTableRow","FirebaseContext","FirebaseService","RestrictPage","ListStudentPage","setShowToast","setToast","firebase","getUser","ListStudent","props","students","setStudents","loading","setLoading","list_onSnapshot","getFirestoreDb","deleteStudentById","_id","studentsTemp","i","length","splice","renderTable","display","flexDirection","justifyContent","alignItems","padding","width","height","textAlign","renderTableBody","map","student"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import axios from \"axios\";\n\nimport StudentTableRow from \"./StudentTableRow\";\n//import { students } from './data.js'\n\nimport FirebaseContext from \"../../../utils/FirebaseContext\";\nimport FirebaseService from \"../../../services/FirebaseStudentService\";\n\nimport RestrictPage from \"../../../utils/RestrictPage\";\nconst ListStudentPage = ({ setShowToast, setToast }) =>\n    <FirebaseContext.Consumer>\n        {\n            (firebase) => {\n                return (\n                    <RestrictPage isLogged={firebase.getUser() != null}>\n                        <ListStudent \n                            firebase={firebase}\n                            setShowToast={setShowToast}\n                            setToast={setToast} />\n                    </RestrictPage>\n                )\n            }\n        }\n    </FirebaseContext.Consumer>\n\nfunction ListStudent(props) {\n\n    const [students, setStudents] = useState([])\n    const [loading, setLoading] = useState(false)\n\n\n    useEffect(\n        () => {\n            //axios.get(\"http://localhost:3001/students\")\n            /*axios.get(\"http://localhost:3002/crud/students/list\")\n                .then(\n                    (res) => {\n                        setStudents(res.data)\n                    }\n                )\n                .catch(\n                    (error) => {\n                        console.log(error)\n                    }\n                )*/\n            //console.log(props.firebase.getFirestoreDb())\n            setLoading(true)\n            FirebaseService.list_onSnapshot(\n                props.firebase.getFirestoreDb(), \n                (students)=>{\n                    setLoading(false)\n                    setStudents(students)\n                }\n            )\n        }\n        ,\n        [props.firebase] \n    )\n\n    function deleteStudentById(_id){\n        let studentsTemp = students\n        for(let i=0;i<studentsTemp.length;i++){\n            if(studentsTemp[i]._id === _id){\n                //console.log(\"1\")\n                studentsTemp.splice(i,1)\n            }\n        }\n        setStudents([...studentsTemp]) //deve-se criar um outro array para disparar o re-render\n        //setStudents(studentsTemp)\n        //setFlag(!flag)\n    }\n\n    function renderTable() {\n\n        if (loading) {\n            //mostrar um spinner!\n            return (\n                <div style={{\n                    display:'flex',\n                    flexDirection:'column',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    padding:100\n                }}>\n                    <div className=\"spinner-border\" \n                     style={{width: '3rem', height: '3rem'}} \n                     role=\"status\" />\n                     Carregando...\n                </div>\n            )\n        }   \n            return (\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Curso</th>\n                            <th>IRA</th>\n                            <th>Nome</th>\n                            <th colSpan={2} style={{ textAlign: \"center\" }}></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {renderTableBody()}\n                    </tbody>\n                </table>\n            )\n        }\n\n        function renderTableBody() {\n            if (!students) return\n            return students.map(\n                (student, i) => {\n                    return <StudentTableRow\n                        student={student}\n                        key={i}\n                        deleteStudentById={deleteStudentById}\n                        firestore={props.firebase.getFirestoreDb()}\n                        setShowToast={props.setShowToast}\n                        setToast={props.setToast}\n                    />\n                }\n            )\n        }\n        \n        \n    return (\n        <>\n            <main>\n                <h2>\n                    Listar Estudantes\n                </h2>\n                {renderTable()}\n            </main>\n            <nav>\n                <Link to=\"/\">Home</Link>\n            </nav>\n        </>\n    );\n}\n\nexport default ListStudentPage"]},"metadata":{},"sourceType":"module"}